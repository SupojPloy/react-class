{"version":3,"sources":["logo.svg","Clock.js","Form.js","User.js","App.js","Quiz.js","reportWebVitals.js","index.js"],"names":["Clock","state","date","Date","this","dd","setInterval","setState","clearInterval","toLocaleTimeString","Component","Form","name","doKey1","doKey","bind","event","target","value","console","log","props","onSayHi","type","onKeyUp","onClick","sayHi","User","data","users","map","user","age","id","Quiz","taskArray","todo","remain","taskName","doInputText","addTodoTask","taskList","toogle","document","getElementById","className","tasks","task","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f4867120.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { Component } from \"react\";\r\n\r\nclass Clock extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = { date: new Date() };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.dd = setInterval(() => {\r\n            this.setState({ date: new Date() });\r\n        }, 500);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.dd);\r\n    }\r\n\r\n    render() {\r\n        return <p>Current date = {this.state.date.toLocaleTimeString()}</p>;\r\n    }\r\n}\r\n\r\nexport default Clock;","import { Component } from \"react\";\r\n\r\nclass Form extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { name: \"\" };\r\n        this.doKey1 = this.doKey.bind(this);\r\n    }\r\n\r\n    doKey(event) {\r\n        this.setState({ name: event.target.value });\r\n    }\r\n\r\n    sayHi() {\r\n        console.log(\"Click say hi\");\r\n        this.props.onSayHi(this.state.name);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input type=\"text\" onKeyUp={this.doKey1} />\r\n                <button onClick={() => this.sayHi()}>Say Hi</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;\r\n","import { Component } from \"react\";\r\n\r\nclass User extends Component {\r\n    render() {\r\n        const data = this.props.users.map((user) => (\r\n            <li key={user.id}>\r\n                {user.name}, {user.age}\r\n            </li>\r\n        ));\r\n        return <ul>{data}</ul>\r\n    }\r\n}\r\n\r\nexport default User;","import logo from './logo.svg';\nimport './App.css';\nimport Clock from './Clock'\nimport Form from './Form'\nimport User from './User'\nimport userEvent from '@testing-library/user-event';\nimport { Component } from 'react';\n\nclass App extends Component {\n  users = [\n    { id: 1, name: \"User 01\", age: 10 },\n    { id: 2, name: \"User 02\", age: 20 },\n    { id: 3, name: \"User 03\", age: 30 },\n  ];\n\n  constructor() {\n    super();\n    this.state = { message: \"-------\"};\n    this.xyz = this.xyz.bind(this);\n  }\n\n  xyz(input) {\n    this.setState({message: \"New section: \" + input});\n  }\n\n  render() {\n    return (\n      <div>\n          <User users={this.users} />\n          <Clock />\n          <Form onSayHi={this.xyz}/>\n          <p>{this.state.message}</p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { Component } from \"react\";\r\nimport './Quiz.css';\r\n\r\nclass Quiz extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {taskArray: [], todo: 0, remain: 0, taskName: \"\"};\r\n        this.doInputText = this.doInputText.bind(this);\r\n        this.addTodoTask = this.addTodoTask.bind(this);\r\n        this.taskList = this.taskList.bind(this);\r\n        this.toogle = this.toogle.bind(this);\r\n    }\r\n\r\n    doInputText(event) {\r\n        this.setState({ taskName: event.target.value });\r\n    }\r\n\r\n    addTodoTask() {\r\n        this.setState({todo: this.state.todo+1, remain: this.state.remain+1});\r\n        this.setState({ taskArray: [...this.state.taskArray, { id: this.state.remain+1, name: this.state.taskName} ] });\r\n    }\r\n\r\n    toogle(event) {\r\n        const oldCss= document.getElementById(event.target.id).className;\r\n        if (oldCss === 'is-done') {\r\n            document.getElementById(event.target.id).className = '';\r\n            const todo = this.state.todo;\r\n            const total = this.state.remain;\r\n            if (todo < total) {\r\n                this.setState({todo: this.state.todo+1});\r\n            }\r\n        } else {\r\n            document.getElementById(event.target.id).className = 'is-done';\r\n            const todo = this.state.todo;\r\n            if (todo > 0) {\r\n                this.setState({todo: this.state.todo-1});\r\n            }\r\n        }\r\n    }\r\n\r\n    taskList(props) {\r\n        const data = props.tasks.map((task) => (\r\n            <li id={task.id} onClick={this.toogle}>{task.name}</li>\r\n        ));\r\n        return <ul>{data}</ul>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"margin\">\r\n                <input type=\"text\" onKeyUp={this.doInputText} />\r\n                <button onClick={this.addTodoTask}>Add</button>\r\n                <p className=\"task-counter\">{this.state.todo} remaining out of {this.state.remain} tasks</p>\r\n                <this.taskList tasks={this.state.taskArray} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Quiz;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Quiz from './Quiz';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Quiz />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}